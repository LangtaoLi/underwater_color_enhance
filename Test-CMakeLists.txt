cmake_minimum_required(VERSION 2.8.3)
project(underwater_color_enhance)

add_compile_options(-std=c++11)

#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pg")
#SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -pg")
#SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -pg")

#LIST(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake_modules)

add_subdirectory(third-party/yaml-cpp)
add_subdirectory(third-party/ticpp)


find_package(Eigen3 REQUIRED)

find_package(OpenCV 3.0 QUIET)
if(NOT OpenCV_FOUND)
   find_package(OpenCV 2.4.3 QUIET)
   if(NOT OpenCV_FOUND)
      message(FATAL_ERROR "OpenCV > 2.4.3 not found.")
   endif()
endif()

find_package(catkin REQUIRED COMPONENTS
  roscpp
  rospy
  roslib
)

catkin_package(
  INCLUDE_DIRS include
  LIBRARIES ${PROJECT_NAME}
  CATKIN_DEPENDS roscpp
                 rospy
                 roslib
)

include_directories(include
  ${PROJECT_SOURCE_DIR}
  ${PROJECT_SOURCE_DIR}/include
  ${EIGEN3_INCLUDE_DIR}
  ${catkin_INCLUDE_DIRS}
  ${CMAKE_SOURCE_DIR}/yaml-cpp/include
  ${CMAKE_SOURCE_DIR}/ticpp
)

# set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib)

add_executable(color_enhance_node
  src/ros_correct.cpp
  src/ColorCorrect.cpp
  src/Method.cpp
  src/NewModel.cpp
  src/Scene.cpp
)

add_dependencies(color_enhance_node
  ${catkin_EXPORTED_TARGETS}
)

target_link_libraries(color_enhance_node
  ${catkin_LIBRARIES}
  ${OpenCV_LIBS}
  yaml-cpp
)

add_library(${PROJECT_NAME}
  src/ColorCorrect.cpp
  src/Scene.cpp
  src/Method.cpp
  src/NewModel.cpp
)

add_dependencies(${PROJECT_NAME}
  ${catkin_EXPORTED_TARGETS}
)

target_link_libraries(${PROJECT_NAME}
  ${catkin_LIBRARIES}
  ${OpenCV_LIBS}
  yaml-cpp
  ticpp
)

install(TARGETS ${PROJECT_NAME} color_enhance_node
        DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
)

#        ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#        LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#        RUNTIME DESTINATION ${CATKIN_GLOBAL_BIN_DESTINATION})

install(DIRECTORY include/${PROJECT_NAME}/
        DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
)
install(DIRECTORY launch
        DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION})

#catkin_package()


# Build examples

#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Options/Image)

#add_executable(image_correct
#  Options/Image/image_correct.cc
#)
#target_link_libraries(image_correct ${PROJECT_NAME} ${OpenCV_LIBS})


#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Options/ROS)

#add_executable(ros_correct
#  Options/ROS/ros_correct.cc
#  src/ColorCorrect.cc
#  src/Scene.cc
#)
#add_library(moo
#  src/ColorCorrect.cc
#  src/Scene.cc
#  src/Method.cc
#  src/NewModel.cc
#  src/GrayWorld.cc
#  src/HistEqual.cc
#)
#target_link_libraries(ros_correct moo ${PROJECT_NAME} ${catkin_LIBRARIES} ${OpenCV_LIBS} yaml-cpp)
#add_dependencies(ros_correct ${PROJECT_NAME} ${catkin_EXPORTED_TARGETS})
